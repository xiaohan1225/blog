import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.DE6vaMEz.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"collect/develop/develop.md","filePath":"collect/develop/develop.md"}'),h={name:"collect/develop/develop.md"};function e(l,s,p,o,k,d){return t(),a("div",null,s[0]||(s[0]=[n('<h2 id="同步-vscode-配置" tabindex="-1">同步 vscode 配置 <a class="header-anchor" href="#同步-vscode-配置" aria-label="Permalink to &quot;同步 vscode 配置&quot;">​</a></h2><ol><li>点击用户头像</li><li>选择<code>Backup and Sync Setttings</code></li><li>点击<code>Sign in</code></li><li>选择 <code>Sign in with GitHub</code></li></ol><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><p>如果报错，需要在<code>hosts</code>文件中进行配置：</p><ol><li>打开<code>hosts</code>文件：<code>sudo vi /etc/hosts</code></li><li>添加<code>185.199.108.133 raw.githubusercontent.com</code></li></ol><p>安装后尝试<code>nvm -v</code>，如无法正常使用，需要配置<code>shell</code>配置文件。</p><p>对于 bash，将以下内容添加到 ~/.bash_profile 或 ~/.bashrc 文件中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$([ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot; ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/.nvm&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/nvm&quot;)&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # This loads nvm</span></span></code></pre></div><p>然后重新加载配置文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bash_profile</span></span></code></pre></div><p>对于 zsh（MacOS Catalina 及更新版本默认使用的shell），将以下内容添加到 ~/.zshrc 文件中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$([ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot; ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/.nvm&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/nvm&quot;)&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # This loads nvm</span></span></code></pre></div><p>然后重新加载配置文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span></code></pre></div><h2 id="mac-nvm-install-failed-python-not-found" tabindex="-1">Mac nvm install failed python: not found <a class="header-anchor" href="#mac-nvm-install-failed-python-not-found" aria-label="Permalink to &quot;Mac nvm install failed python: not found&quot;">​</a></h2><p>在M2芯片的设备上，由于缺少python导致<code>nvm</code>安装<code>node</code>失败。</p><p><code>nvm install v12.22.12</code>报错： <code>exec: python: not found</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /System/Applications/Utilities/</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>找到 终端.app，右键 -&gt; 显示简介，钩上 Rosetta，然后<strong>退出终端.app，完全退出，再重新打开终端</strong></p><p>增加<code>alias python=/usr/bin/python3</code>到<code>~/.zshrc</code>和<code>~/.bash_profile</code>中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;alias python=/usr/bin/python3&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;alias python=/usr/bin/python3&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bash_profile</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bash_profile</span></span></code></pre></div><h2 id="清理工具" tabindex="-1">清理工具 <a class="header-anchor" href="#清理工具" aria-label="Permalink to &quot;清理工具&quot;">​</a></h2><p>腾讯柠檬清理：<a href="https://lemon.qq.com/" target="_blank" rel="noreferrer">https://lemon.qq.com/</a></p><h2 id="数据库管理" tabindex="-1">数据库管理 <a class="header-anchor" href="#数据库管理" aria-label="Permalink to &quot;数据库管理&quot;">​</a></h2><p><a href="https://sequel-ace.com/" target="_blank" rel="noreferrer">Sequel Ace</a></p><h2 id="code-命令报错-zsh-command-not-found-code" tabindex="-1">code . 命令报错：zsh: command not found: code <a class="header-anchor" href="#code-命令报错-zsh-command-not-found-code" aria-label="Permalink to &quot;code . 命令报错：zsh: command not found: code&quot;">​</a></h2><ol><li>尝试安装 code 命令</li></ol><ul><li>打开 Visual Studio Code。</li><li>按 Command + Shift + P 打开命令面板。</li><li>输入 Shell Command: Install &#39;code&#39; command in PATH 并选择它。</li><li>重新启动终端。</li></ul><p>如果安装报错<code>EACCES: permission denied, unlink &#39;/usr/local/bin/code&#39;</code>，需要先选择 <code>Shell Command: Uninstall &#39;code&#39; command from PATH</code> 卸载code命令，然后重新安装。</p><h2 id="windows-安装-nvm" tabindex="-1">windows 安装 nvm <a class="header-anchor" href="#windows-安装-nvm" aria-label="Permalink to &quot;windows 安装 nvm&quot;">​</a></h2><p><a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noreferrer">nvm</a></p>',32)]))}const F=i(h,[["render",e]]);export{c as __pageData,F as default};
