import{_ as t,c as a,o as l,ae as T}from"./chunks/framework.7E1nAy7n.js";const s=JSON.parse('{"title":"001 HTTP的历史","description":"","frontmatter":{"title":"001 HTTP的历史","date":"2021-07-17T00:00:00.000Z","categories":["网络协议"],"tags":["HTTP"],"sidebar":"auto"},"headers":[],"relativePath":"collect/net/001.md","filePath":"collect/net/001.md"}'),i={name:"collect/net/001.md"};function o(r,e,P,h,H,n){return l(),a("div",null,[...e[0]||(e[0]=[T('<h2 id="第一阶段-http的诞生" tabindex="-1">第一阶段（HTTP的诞生） <a class="header-anchor" href="#第一阶段-http的诞生" aria-label="Permalink to &quot;第一阶段（HTTP的诞生）&quot;">​</a></h2><p>1989年，蒂姆·伯纳斯 - 李（Tim Berners-Lee）发表了一篇论文，提出了在互联网上构建超链接文档系统的构想，在这篇论文中他确立了三项关键技术：</p><ol><li>URI：URI（统一资源标识符）作为资源在互联网上的唯一身份</li><li>HTML：HTML作为描述超文本文档的超文本标记语言</li><li>HTTP：HTTP作为用来传输超文本的超文本传输协议</li></ol><p>这一年，HTTP诞生了。</p><h2 id="第二阶段-http-0-9" tabindex="-1">第二阶段（HTTP/0.9） <a class="header-anchor" href="#第二阶段-http-0-9" aria-label="Permalink to &quot;第二阶段（HTTP/0.9）&quot;">​</a></h2><p>20世纪90年代初的互联网世界很简陋，这一时期的HTTP协议被定义为0.9版，只允许用“GET”动作从服务器获取HTML文档，并且在响应请求之后立即关闭连接，功能非常有限。</p><h2 id="第三阶段-http-1-0" tabindex="-1">第三阶段（HTTP/1.0） <a class="header-anchor" href="#第三阶段-http-1-0" aria-label="Permalink to &quot;第三阶段（HTTP/1.0）&quot;">​</a></h2><p>1996年发布了HTTP/1.0版本，对0.9版本在多方面进行了增强，例如：</p><ol><li>增加了HEAD、POST等新方法</li><li>增加了响应状态码，标记可能的错误原因</li><li>引入了协议版本号概念</li><li>引入了HTTP Header（头部）的概念，让HTTP处理请求和响应更加灵活</li><li>传输的数据不再仅限于文本</li></ol><h2 id="第四阶段-http-1-1" tabindex="-1">第四阶段（HTTP/1.1） <a class="header-anchor" href="#第四阶段-http-1-1" aria-label="Permalink to &quot;第四阶段（HTTP/1.1）&quot;">​</a></h2><p>1995网景和微软开始的浏览器大战极大地推动了Web的发展，而HTTP/1.0也在这个过程中经受了实践检验，于是，在浏览器大战结束后的1999年，HTTP/1.1发布了RFC文档，编号为2616。HTTP的主要变更点有：</p><ol><li>增加了PUT、DELETE等新的方法</li><li>增加了缓存管理和控制</li><li>明确了连接管理，允许持久连接</li><li>允许响应数据分块（chunked），利于传输大文件</li><li>强制要求Host头，让互联网主机托管成为可能</li></ol><h2 id="第五阶段-http-2" tabindex="-1">第五阶段（HTTP/2） <a class="header-anchor" href="#第五阶段-http-2" aria-label="Permalink to &quot;第五阶段（HTTP/2）&quot;">​</a></h2><p>搜索巨头Google推出了新的SPDY协议，并在Chrome里应用于自家的服务器，如同十多年前的网景与微软一样，从实际的用户方来“倒逼”HTTP协议的变革，这也开启了第二次的“浏览器大战”。最终Chrome凭借着超过60%的市场占有率取得了胜利，并借势把SPDY推上了标准的宝座，互联网标准化组织以SPDY为基础开始制定新版本的HTTP协议，并在2015年发布了HTTP/2，RFC编号7540。HTTP/2在考虑了当今互联网宽带、移动、不安全等现状，并高度兼容HTTP/1.1的同时在性能改善方面做了很大努力，其特点有：</p><ol><li>不再是纯文本，采取二进制协议</li><li>废弃了1.1里的管道，1个TCP连接可发起多个请求，也就是多路复用</li><li>对头部压缩减少数据传输量</li><li>服务端推送</li></ol><h2 id="第六阶段-http-3" tabindex="-1">第六阶段（HTTP/3） <a class="header-anchor" href="#第六阶段-http-3" aria-label="Permalink to &quot;第六阶段（HTTP/3）&quot;">​</a></h2><p>在HTTP/2还处于草案之时，Google又发明了一个新的协议QUIC，以相同“套路”，继续在Chrome和自家服务器里进行试验，依靠这庞大的用户量和数据量，持续地推动QUIC协议成为互联网上的协议的一部分。在2018年，“HTTP over QUIC”被更名为“HTTP/3”，HTTP/3正式进入了标准化制定阶段。</p>',17)])])}const c=t(i,[["render",o]]);export{s as __pageData,c as default};
