import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.DaakH-K9.js";const u=JSON.parse('{"title":"2.vim的语法","description":"","frontmatter":{},"headers":[],"relativePath":"collect/vim/2.vim的语法.md","filePath":"collect/vim/2.vim的语法.md"}'),o={name:"collect/vim/2.vim的语法.md"};function r(p,l,d,c,s,n){return e(),a("div",null,l[0]||(l[0]=[t('<h1 id="_2-vim的语法" tabindex="-1">2.vim的语法 <a class="header-anchor" href="#_2-vim的语法" aria-label="Permalink to &quot;2.vim的语法&quot;">​</a></h1><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h2><p>vim的操作由两部分组成：</p><ul><li>操作（operation ） <ul><li>d：删除</li><li>y：复制</li><li>c：删除并进入insert模式</li><li>...</li></ul></li><li>动词（范围）：比如 j、k、h、l 这些就是动词</li></ul><h2 id="基于单词-字串的移动" tabindex="-1">基于单词/字串的移动 <a class="header-anchor" href="#基于单词-字串的移动" aria-label="Permalink to &quot;基于单词/字串的移动&quot;">​</a></h2><ul><li><p>e：移动到本单词/下一次单词的结尾</p></li><li><p>b：移动到本单词/上一个单词的开头</p></li><li><p>w：移动到单词的开头</p></li><li><p>ge：移动到上一个单词的结尾</p></li><li><p>0: 跳到行首</p></li><li><p>$: 跳到行尾</p></li><li><p>^: 跳到行首的第一个非空白字符</p></li><li><p>gg：跳到第一行</p></li><li><p>G：跳到最后一行G</p></li></ul><h2 id="屏幕的移动" tabindex="-1">屏幕的移动 <a class="header-anchor" href="#屏幕的移动" aria-label="Permalink to &quot;屏幕的移动&quot;">​</a></h2><ul><li>ctrl + f: 向上移动一屏</li><li>ctrl + b: 向下移动一屏</li><li>ctrl + d: 向上移动半屏</li><li>ctrl + u: 向下移动半屏</li><li>ctrl + e: 向上滚动一行</li><li>ctrl + y: 向下滚动一行</li><li>zz: 将当前行设置在屏幕中间</li><li>zt: 将当前行滚动到屏幕顶端</li><li>zb: 将当前行滚动到屏幕底端</li></ul><p>直接跳转到指定行：</p><ul><li>行号 + gg</li><li>行号 + G</li><li>: + 行号 + 回车</li></ul><p>扩展：vim +n filename （在打开文件后，跳转到文件的第n行）</p><h2 id="常用组合" tabindex="-1">常用组合 <a class="header-anchor" href="#常用组合" aria-label="Permalink to &quot;常用组合&quot;">​</a></h2><p>cw：删除当前单词并进入insert模式 ciw：如果你光标在单词中间，可以删除整个单词，并进入insert模式</p><p>类似可以使用dw和diw、yw和yiw</p><p><code>di{</code> 等价于 <code>diB</code>, B可以代表大括号</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>ea：在当前单词结尾处添加</p><h2 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h2><p>x：删除光标所在的字符（重点）</p><p>X：删除光标前的字符</p><p>s：删除当前光标的字符并进入 insert 模式（重点）</p><p>S：删除当前光标所在行并进入 insert 模式（重点）</p><h2 id="替换" tabindex="-1">替换 <a class="header-anchor" href="#替换" aria-label="Permalink to &quot;替换&quot;">​</a></h2><p>r：替换一个字符（重点）</p><p>R：替换多个字符</p><p>全局替换 :%s/old/new/g</p><ul><li>% 表示整个文件。</li><li>g 表示全局替换（否则每行只替换第一个匹配）。</li><li>如果需要 确认每次替换，加 c 选项：<code>:%s/foo/bar/gc</code></li></ul><h2 id="undo-redo" tabindex="-1">undo/redo <a class="header-anchor" href="#undo-redo" aria-label="Permalink to &quot;undo/redo&quot;">​</a></h2><p>可撤销块：从进入insert到回到normal模式，中间的输入或删除的内容被当做一个词修改</p><blockquote><p>注意：上下左右方向箭会影响可撤销块</p></blockquote><p>u：undo</p><p>Ctrl + r：redo</p><h2 id="查找-单行" tabindex="-1">查找（单行） <a class="header-anchor" href="#查找-单行" aria-label="Permalink to &quot;查找（单行）&quot;">​</a></h2><ol><li><p>当前行内查找字符 f{char}: 光标跳到下个{char}所在位置 F{char}: 反向移动到上个{char}所在位置 t{char}: 光标跳到下个{char}的前一个字符位置 T{char}: 反向移动到上个{char}的后一个字符位置 ;: 重复上次的字符查找操作 ,: 反向查找上次的查找命令</p></li><li><p>全文查找（搜索）</p></li></ol><ul><li><code>/{pattern}&lt;Enter&gt;</code>: 向下搜索匹配的字符串（支持正则表达式）</li><li><code>?{pattern}&lt;Enter&gt;</code>: 向上搜索匹配的字符串（支持正则表达式）</li></ul><p>跳转匹配结果：</p><ul><li>n：跳到下一个匹配项。</li><li>N：跳到上一个匹配项。</li></ul><ol start="3"><li>基于标记跳转</li></ol><ul><li><code>m{a-z}</code>: 设置标记（例如 ma 将当前光标位置标记为 a）。</li><li>``{a-z}<code>: 跳转到标记位置（例如 </code>a 跳转到标记 a）。</li><li>``: 返回跳转前的位置。</li></ul><ol start="4"><li>全文查找当前单词</li></ol><ul><li><code>*</code>: 向下查找光标下的完整单词(精确匹配)</li><li><code>#</code>: 向上查找光标下的完整单词(精确匹配)</li><li><code>g*</code>: 向下查找光标下的完整单词(模糊匹配)</li><li><code>g#</code>: 向上查找光标下的完整单词(模糊匹配)</li></ul><blockquote><p>查找前，光标停在某个单词下即可，不要用光标选中单词</p></blockquote><h2 id="删除-复制-整个文件" tabindex="-1">删除/复制 整个文件 <a class="header-anchor" href="#删除-复制-整个文件" aria-label="Permalink to &quot;删除/复制 整个文件&quot;">​</a></h2><p>die/yie</p><h2 id="删除html标签" tabindex="-1">删除html标签 <a class="header-anchor" href="#删除html标签" aria-label="Permalink to &quot;删除html标签&quot;">​</a></h2><p>dit：删除html标签里的内容 dat：连同标签一起删除</p><p>cit/cat也同样可以使用</p>',47)]))}const m=i(o,[["render",r]]);export{u as __pageData,m as default};
