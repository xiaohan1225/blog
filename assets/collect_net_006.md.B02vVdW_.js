import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.DaakH-K9.js";const d=JSON.parse('{"title":"006 Websocket","description":"","frontmatter":{"title":"006 Websocket","date":"2021-09-06T00:00:00.000Z","categories":["网络协议"],"tags":["HTTP"],"sidebar":"auto"},"headers":[],"relativePath":"collect/net/006.md","filePath":"collect/net/006.md"}'),n={name:"collect/net/006.md"};function l(h,s,k,p,r,o){return e(),a("div",null,s[0]||(s[0]=[t(`<p>Socket：一套网络编程API，利用它可以建立网络连接（socket编程）。</p><h2 id="http-vs-websocket" tabindex="-1">HTTP vs WebSocket <a class="header-anchor" href="#http-vs-websocket" aria-label="Permalink to &quot;HTTP vs WebSocket&quot;">​</a></h2><p>HTTP请求的特点：通信只能由客户端发起。所以，早期很多网站为了实现推送技术，所用的技术都是轮询。</p><ul><li>轮询：是指由浏览器每隔一段时间（如每秒）向服务器发出HTTP请求，然后服务器返回最新的数据给客户端</li><li>为了能更好的节省服务器资源和带宽，并且能够更实时地进行通讯，HTML5规范中出现了WebSocket协议。</li></ul><ol><li>WebSocket和HTTP属于平级关系，都是应用层协议。</li></ol><ul><li>TCP本身就是支持全双工通信</li><li>但是HTTP的请求、应答模式限制了TCP全双工的能力</li></ul><ol start="2"><li><p>WebSocket使用80（ws://）、443（wss://）端口，可以绕过大多数防火墙的限制。</p></li><li><p>与HTTP不同的是，WebSocket需要先建立连接（应用层的连接）。</p></li></ol><ul><li>这就使得WebSocket成为一种有状态的协议，之后通信时可以省略部分状态信息。</li><li>而HTTP请求可能需要在每个请求都额外携带状态信息（如含有身份信息的Cookie）</li></ul><h2 id="websocket" tabindex="-1">WebSocket <a class="header-anchor" href="#websocket" aria-label="Permalink to &quot;WebSocket&quot;">​</a></h2><p>WebSocket是基于TCP的<strong>全双工</strong>通讯的应用层协议。</p><p>全双工：即客户端、服务器任何一方都可以主动发消息给对方。</p><p>应用场景：社交订阅、股票基金报价、体育实况更新、多媒体聊天、多玩家游戏等。</p><h2 id="websocket——建立连接" tabindex="-1">WebSocket——建立连接 <a class="header-anchor" href="#websocket——建立连接" aria-label="Permalink to &quot;WebSocket——建立连接&quot;">​</a></h2><p>WebSocket需要借助HTTP协议来建立连接（也叫做握手,HandShake）</p><ul><li>由客户端（浏览器）主动发出握手请求</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chat </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HTTP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: server.example.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: websocket</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Upgrade</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WebSocket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: dGhlIHNhbXBsZSBub25jZQ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//example.com</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WebSocket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: chat, superchat</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WebSocket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HTTP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 101</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Switching Protocols</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: websocket</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Upgrade</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WebSocket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: s3pPLMBiTxaQ9kYGzzhZRbK</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xOo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WebSocket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: chat</span></span></code></pre></div><p><strong>Connection</strong>必须设置Upgrade，表示客户端希望连接升级</p><p><strong>Upgrade</strong>必须设置为webSocket，表示希望升级到WebSocket协议</p><p><strong>Sec-WebSocket-Version</strong>表示支持的WebSocket版本，RFC 6455要求使用的版本是13。</p><p><strong>Sec-WebSocket-Key</strong>是客户端生成的随机字符串，比如例子中的dGhlIHNhbXBsZSBub25jZQ==</p><p>服务器接收到客户端的Sec-WebSocket-Key后，会进行以下操作：</p><ol><li>Sec-WebSocket-Key加上一个固定的值<a href="https://datatracker.ietf.org/doc/html/rfc4122" target="_blank" rel="noreferrer">GUID</a>值（258EAFA5-E914-47DA-95CA-C5AB0DC85B11），变成dGhlIHNhbXBsZSBub25jZQ==258EAFA5-E914-47DA-95CA-C5AB0DC85B11</li><li>将1的结果进行<a href="http://encode.chahuo.com/" target="_blank" rel="noreferrer">SHA-1摘要计算</a>，得到结果b37a4f2cc0624f1690f64606cf385945b2bec4ea</li><li>将2的结果进行<a href="https://base64.guru/converter/encode/hex" target="_blank" rel="noreferrer">Hex To Base64编码</a>，得到结果s3pPLMBiTxaQ9kYGzzhZRbK+xOo=</li><li>将3的结果作为<strong>Sec-WebSocket-Accept</strong>响应头的值，返回给客户端</li></ol><p>如此操作，可以尽量避免普通HTTP请求被误认为WebSocket协议（仅靠Connection和Upgrade是不够的）。</p><h2 id="websocket——使用" tabindex="-1">WebSocket——使用 <a class="header-anchor" href="#websocket——使用" aria-label="Permalink to &quot;WebSocket——使用&quot;">​</a></h2><p>W3C标准化了一套WebSocket API，可以直接使用JS调用。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ws</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WebSocket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wss://example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,27)]))}const g=i(n,[["render",l]]);export{d as __pageData,g as default};
