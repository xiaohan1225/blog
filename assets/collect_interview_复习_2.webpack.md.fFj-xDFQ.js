import{_ as l,c as i,o as a,ae as o}from"./chunks/framework.DaakH-K9.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"collect/interview/复习/2.webpack.md","filePath":"collect/interview/复习/2.webpack.md"}'),c={name:"collect/interview/复习/2.webpack.md"};function t(r,e,d,p,n,s){return a(),i("div",null,e[0]||(e[0]=[o('<h2 id="webpack优化" tabindex="-1">webpack优化 <a class="header-anchor" href="#webpack优化" aria-label="Permalink to &quot;webpack优化&quot;">​</a></h2><p>一、优化构建速度</p><ol><li>noParse</li><li>babel-loader开启缓存</li><li>IgnorePlugin</li><li>happyPack</li><li>sourcemap 二、优化产出代码</li><li>小图片base64编码</li><li>bundle加hash</li><li>懒加载</li><li>提取公共代码split-chunks</li><li>external</li><li>Tree-Shaking</li></ol><h2 id="webpack构建流程" tabindex="-1">webpack构建流程 <a class="header-anchor" href="#webpack构建流程" aria-label="Permalink to &quot;webpack构建流程&quot;">​</a></h2><ol><li>初始化参数</li><li>开始编译</li><li>找到入口</li><li>模块编译</li><li>完成模块编译</li><li>输出资源</li><li>写入文件</li><li>输出资源</li></ol><h2 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h2><p>原因：</p><ul><li>缓慢的服务启动速度：项目大以后，webpack的构建速度长达几十秒</li><li>缓存的HMR热更新：即使采用了HMR模式，其热更新速度还是会随着应用规模的增长而缓慢下降</li></ul><p>vite就是快的意思，它基于<code>Esbuild</code>和<code>rollup</code>,依靠浏览器本身的ESM功能，实现极致开发体验的新一代构建工具。</p><p>开发环境：</p><ol><li>利用浏览器原生的<code>Es Module</code>的编译能力，<code>import</code>时会向<code>dev server</code>发送ajax请求，服务器对源码做简单处理后返回浏览器</li><li>利用<code>esbuild</code>处理模块依赖，<code>esbuild</code>使用go语言编写，比一般nodejs写的编译器快几个数量级。</li><li>vite的hmr是在原生es module上执行的，当编辑文件时，vite只需要让已编辑文件失活，就能实现热更新，而且不会随着应用的增大而显著降低速度。</li></ol><p>生产环境：</p><ol><li>使用<code>rollup</code>打包，依赖其稳定的生态和更简洁的插件机制</li></ol><p>原理：</p><ol><li>浏览器只支持相对或者绝对路径，而我们引入包的时候都是<code>import xxx from &#39;yyy&#39;</code>，所以需要对路径进行转换。</li></ol>',15)]))}const h=l(c,[["render",t]]);export{u as __pageData,h as default};
