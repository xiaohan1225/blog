import{_ as t,c as i,o as e,ae as a}from"./chunks/framework.DaakH-K9.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"collect/net/question/003.md","filePath":"collect/net/question/003.md"}'),o={name:"collect/net/question/003.md"};function n(r,l,T,c,h,p){return e(),i("div",null,l[0]||(l[0]=[a('<h2 id="_1-get和post的请求的区别" tabindex="-1">1. GET和POST的请求的区别 <a class="header-anchor" href="#_1-get和post的请求的区别" aria-label="Permalink to &quot;1. GET和POST的请求的区别&quot;">​</a></h2><ul><li>幂等性：GET是从服务器获取资源，没有副作用，而post则是创建资源，如果发多次会多次创建资源</li><li>缓存：GET请求会被浏览器主动缓存，而POST不会</li><li>安全性：GET请求参数拼接在URL上，相对不安全，而且浏览器会对URL长度有限制，而POST请求则放在请求体中，相对更安全，而且请求体大小无限制</li></ul><h2 id="_2-post和put请求的区别" tabindex="-1">2. POST和PUT请求的区别 <a class="header-anchor" href="#_2-post和put请求的区别" aria-label="Permalink to &quot;2. POST和PUT请求的区别&quot;">​</a></h2><ul><li>post一般为创建资源，而put为修改资源</li><li>post HTTP1.0 PUT HTTP1.1</li></ul><h2 id="_3-常见的http请求头和响应头" tabindex="-1">3. 常见的HTTP请求头和响应头 <a class="header-anchor" href="#_3-常见的http请求头和响应头" aria-label="Permalink to &quot;3. 常见的HTTP请求头和响应头&quot;">​</a></h2><p>请求头：</p><ul><li>Accept</li><li>Accept-encoding</li><li>Accept-language</li><li>Host</li><li>referer</li><li>connection</li><li>use-agent</li><li>if-no-match</li><li>if-modify-since</li><li>Accept-range</li><li>set-cookie</li><li>expires</li></ul><p>响应头</p><ul><li>content-encoding</li><li>content-range</li><li>content-type</li><li>content-length</li><li>cookie</li><li>server</li></ul><p>通用：</p><ul><li>Date</li><li>connection</li></ul><h2 id="_4-常见的http请求方法" tabindex="-1">4.常见的HTTP请求方法 <a class="header-anchor" href="#_4-常见的http请求方法" aria-label="Permalink to &quot;4.常见的HTTP请求方法&quot;">​</a></h2><ul><li>get 获取资源</li><li>post 创建资源</li><li>put 修改资源</li><li>delete 删除资源</li><li>HEAD 判断资源是否存在 无响应体</li><li>options 预检请求 获取资源支持的请求 或者跨域的安全请求</li><li>trace获取路径</li></ul><h2 id="_5-http-1-0-和-http-1-1-之间有哪些区别" tabindex="-1">5. HTTP 1.0 和 HTTP 1.1 之间有哪些区别 <a class="header-anchor" href="#_5-http-1-0-和-http-1-1-之间有哪些区别" aria-label="Permalink to &quot;5. HTTP 1.0 和 HTTP 1.1 之间有哪些区别&quot;">​</a></h2><ul><li>http1.0 默认使用非持久连接，而 http1.1 默认使用持久连接</li><li>缓存cache-control 条件请求</li><li>host虚拟主机</li><li>content-range范围请求</li><li>请求方法PUT、HEAD、OPTIONS</li></ul><h2 id="_6-http-1-1-和-http-2-0-的区别" tabindex="-1">6.HTTP 1.1 和 HTTP 2.0 的区别 <a class="header-anchor" href="#_6-http-1-1-和-http-2-0-的区别" aria-label="Permalink to &quot;6.HTTP 1.1 和 HTTP 2.0 的区别&quot;">​</a></h2><ul><li>HTTP2.0是二进制协议，HTTP1.1发送的是文本或者ASCII码</li><li>多路复用、头部压缩、服务端推送、请求资源的优先级</li><li>安全性</li></ul><h2 id="_7-http和https协议的区别" tabindex="-1">7. HTTP和HTTPS协议的区别 <a class="header-anchor" href="#_7-http和https协议的区别" aria-label="Permalink to &quot;7. HTTP和HTTPS协议的区别&quot;">​</a></h2><ul><li>明文传输 加密传输</li><li>在tcp上新增了TLS层</li><li>数字证书 需要一定的费用</li><li>端口</li></ul>',19)]))}const P=t(o,[["render",n]]);export{u as __pageData,P as default};
