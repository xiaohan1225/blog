import{_ as t,c as e,o as a,ae as s}from"./chunks/framework.BHrE6nLq.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"collect/develop/git.md","filePath":"collect/develop/git.md"}'),o={name:"collect/develop/git.md"};function l(n,i,r,h,c,d){return a(),e("div",null,i[0]||(i[0]=[s('<h2 id="常用git命令" tabindex="-1">常用git命令 <a class="header-anchor" href="#常用git命令" aria-label="Permalink to &quot;常用git命令&quot;">​</a></h2><h3 id="git-remote" tabindex="-1">git remote <a class="header-anchor" href="#git-remote" aria-label="Permalink to &quot;git remote&quot;">​</a></h3><ul><li><code>git remote</code>：此命令列出本地仓库关联的所有远程仓库的名称。</li><li><code>git remote -v</code>：此选项显示所有远程仓库的 URL，以及它们对应的名称。</li><li><code>git remote add &lt;name&gt; &lt;url&gt;</code>：该子命令向本地仓库添加一个新的远程仓库。<code>&lt;name&gt;</code> 是您为远程仓库选择的自定义名称，<code>&lt;url&gt;</code> 是远程仓库的 URL。</li><li><code>git remote rename &lt;old-name&gt; &lt;new-name&gt;</code>：该子命令重命名现有的远程仓库。<code>&lt;old-name&gt;</code> 是当前的远程仓库名称，<code>&lt;new-name&gt;</code> 是您要为其指定的新名称。</li><li><code>git remote remove &lt;name&gt;</code>：该子命令取消本地仓库与远程仓库之间的关联。<code>&lt;name&gt;</code> 是要删除的远程仓库的名称。</li><li><code>git remote set-url &lt;name&gt; &lt;new-url&gt;</code>：该子命令更改现有远程仓库的 URL。<code>&lt;name&gt;</code> 是远程仓库的名称，<code>&lt;new-url&gt;</code> 是要指定的新 URL。</li></ul><h2 id="git-commit" tabindex="-1">git commit <a class="header-anchor" href="#git-commit" aria-label="Permalink to &quot;git commit&quot;">​</a></h2><p>如何修改最近一次的commit信息: git commit --amend</p><ol><li>如果只需要追加修改，而不修改上次提交信息: git commit --amend --no-edit</li><li>如果只想修改上次提交信息，而不是追加修改: git commit --amend --only -m &quot;new message&quot;</li></ol><h2 id="git-rebase" tabindex="-1">git rebase <a class="header-anchor" href="#git-rebase" aria-label="Permalink to &quot;git rebase&quot;">​</a></h2><p>git rebase -i ba90dc7ff4ab54f9bbb2ca89ddea031fa735c6d2 git rebase解决冲突：</p><ol><li>git checkout branch_a git rebase master</li><li>手动解决冲突，然后执行git add 或者git rm文件，然后再执行 git rebase --continue 继续变基，当然，也可以直接git rebase --skip跳过这个commit，或者使用git rebase --abort放弃rebase。</li><li>修改好:wq保存即可 批量rebase：</li><li>git rebase -i ba90dc7ff4ab54f9bbb2ca89ddea031fa735c6d2</li><li>:%s/pick /f /g (😒/old/new/g 将当前行的所有字符串old替换为new)</li><li>Ctrl + b 往上滚动一屏幕 找到第一个commit 改成s</li></ol><h2 id="git注意点" tabindex="-1">git注意点 <a class="header-anchor" href="#git注意点" aria-label="Permalink to &quot;git注意点&quot;">​</a></h2><ul><li>有时即使你本地代码什么都没改，但别人可能把他代码同步到了远程分支，导致远程代码和你本地代码不一致会造成有冲突，git pull拉下来会有很多文件需要commit，可用git reset --hard origin/分支名和远程代码保持同步 git</li></ul><h2 id="修改远程分支url" tabindex="-1">修改远程分支url <a class="header-anchor" href="#修改远程分支url" aria-label="Permalink to &quot;修改远程分支url&quot;">​</a></h2><p>git remote set-url origin <a href="mailto:git@github.com" target="_blank" rel="noreferrer">git@github.com</a>:username/repo.git</p><h2 id="删除远程分支" tabindex="-1">删除远程分支 <a class="header-anchor" href="#删除远程分支" aria-label="Permalink to &quot;删除远程分支&quot;">​</a></h2><p>git push --delete origin branch-name</p><h2 id="配置git用户名和邮箱" tabindex="-1">配置git用户名和邮箱 <a class="header-anchor" href="#配置git用户名和邮箱" aria-label="Permalink to &quot;配置git用户名和邮箱&quot;">​</a></h2><p>全局配置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xx</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxx.com</span></span></code></pre></div><p>本地配置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xx</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxx.com</span></span></code></pre></div><h2 id="git常见问题" tabindex="-1">git常见问题 <a class="header-anchor" href="#git常见问题" aria-label="Permalink to &quot;git常见问题&quot;">​</a></h2><h3 id="_1-github-push报错" tabindex="-1">1.github push报错 <a class="header-anchor" href="#_1-github-push报错" aria-label="Permalink to &quot;1.github push报错&quot;">​</a></h3><p>在推送代码给<code>github</code>仓库的时候，报错：<code>ssh: connect to host github.com port 22: Connection timed out</code>；</p><p>解决方案如下：</p><p>$ ssh -T <a href="mailto:git@github.com" target="_blank" rel="noreferrer">git@github.com</a> ssh: connect to host github.com port 22: Connection timed out</p><p>$ # but this might work $ ssh -T -p 443 <a href="mailto:git@ssh.github.com" target="_blank" rel="noreferrer">git@ssh.github.com</a> Hi xxxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access. $ # Override SSH settings $ vim ~/.ssh/config</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Add section below to it</span></span>\n<span class="line"><span>Host github.com</span></span>\n<span class="line"><span>  Hostname ssh.github.com</span></span>\n<span class="line"><span>  Port 443</span></span></code></pre></div><p>$ ssh -T <a href="mailto:git@github.com" target="_blank" rel="noreferrer">git@github.com</a> Hi xxxxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</p><h3 id="_2-github中contribution-activity不展示commit相关的信息" tabindex="-1">2.<code>Github</code>中<code>Contribution activity</code>不展示<code>commit</code>相关的信息 <a class="header-anchor" href="#_2-github中contribution-activity不展示commit相关的信息" aria-label="Permalink to &quot;2.`Github`中`Contribution activity`不展示`commit`相关的信息&quot;">​</a></h3><p>可能是git配置的邮箱登录<code>github</code>的邮箱不一致导致的，这时候需要使用<code>git config --local user.email xxx.com</code> 配置下。</p>',30)]))}const m=t(o,[["render",l]]);export{p as __pageData,m as default};
