import{_ as a,c as t,o as l,ae as r}from"./chunks/framework.BezmCoJM.js";const _=JSON.parse('{"title":"001 React和Vue的对比","description":"","frontmatter":{"title":"001 React和Vue的对比","date":"2021-07-08T00:00:00.000Z","categories":["React"],"tags":["React"],"sidebar":"auto"},"headers":[],"relativePath":"collect/framework/react/001.md","filePath":"collect/framework/react/001.md"}'),i={name:"collect/framework/react/001.md"};function o(c,e,n,s,u,d){return l(),t("div",null,[...e[0]||(e[0]=[r('<h2 id="相同点" tabindex="-1">相同点 <a class="header-anchor" href="#相同点" aria-label="Permalink to &quot;相同点&quot;">​</a></h2><ol><li>都有虚拟DOM（Virtual DOM是一个映射真实DOM的JavaScript对象）</li><li>都提供了响应式和组件化的视图组件</li></ol><h2 id="不同点" tabindex="-1">不同点 <a class="header-anchor" href="#不同点" aria-label="Permalink to &quot;不同点&quot;">​</a></h2><h3 id="写法" tabindex="-1">写法 <a class="header-anchor" href="#写法" aria-label="Permalink to &quot;写法&quot;">​</a></h3><ul><li>Vue的代码都放到一个对象里面，内聚性比较强，而React比较分散。</li><li>Vue封装好了一些v-if、v-for指令，而React比较灵活，其jsx语法其实就相当于在写JavaScript逻辑，其React元素可以灵活地赋值给变量，比Vue中的插槽更加灵活。</li></ul><h3 id="渲染" tabindex="-1">渲染 <a class="header-anchor" href="#渲染" aria-label="Permalink to &quot;渲染&quot;">​</a></h3><ul><li>Vue依赖响应式核心实现（Object.defineProperty/Proxy）数据驱动视图，借鉴<code>MVVM</code>模式，而React需要主动调用setState告知React数据发生了变化。State -&gt; View -&gt; New State -&gt; new View ui = render(data)</li><li>模板的渲染方式不同。React是通过JSX来渲染模板，而Vue是通过扩展的HTML来进行模板的渲染。</li></ul><h3 id="组件形式" tabindex="-1">组件形式 <a class="header-anchor" href="#组件形式" aria-label="Permalink to &quot;组件形式&quot;">​</a></h3><ul><li>组件形式不同，Vue文件里将HTML、JS、CSS组合在一起。React提供class组件和function组件。</li></ul><h3 id="开发模式" tabindex="-1">开发模式 <a class="header-anchor" href="#开发模式" aria-label="Permalink to &quot;开发模式&quot;">​</a></h3><ul><li>React的开发模式： <ul><li>React使用的jsx，所以对应的代码都是<strong>编写的类似于js的一种语法</strong>；</li><li>之后通过babel将jsx编译成React.createElement函数调用。</li></ul></li><li>Vue也支持jsx的开发模式： <ul><li>但是大多数情况下，都是<strong>基于HTML的模板语法</strong>；</li><li>在模板中，允许开发者以声明式的方式将<strong>DOM</strong>和<strong>底层组件实例的数据</strong>绑定在一起；</li><li>在底层的实现中，Vue将模板编译成虚拟DOM渲染函数（render函数）。</li></ul></li></ul>',11)])])}const f=a(i,[["render",o]]);export{_ as __pageData,f as default};
