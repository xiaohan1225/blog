import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.BKNbpbHR.js";const r=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"collect/vue/keep-alive.md","filePath":"collect/vue/keep-alive.md"}'),n={name:"collect/vue/keep-alive.md"};function l(p,s,h,k,d,o){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h2 id="与-keep-alive-相关钩子" tabindex="-1">与 keep-alive 相关钩子 <a class="header-anchor" href="#与-keep-alive-相关钩子" aria-label="Permalink to &quot;与 keep-alive 相关钩子&quot;">​</a></h2><ol><li><strong>activated</strong>：<code>&lt;keep-alive&gt;</code> 缓存的组件被激活时，会执行 <code>activated</code> 钩子。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">activated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 可以正常访问this</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 可以在这里拉取接口更新数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li><strong>deactivated</strong>：当使用 <code>&lt;keep-alive&gt;</code> 包裹的组件被切换离开时，组件会从激活状态变成非激活状态，此时会执行 <code>deactivated</code> 钩子。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deactivated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 可以正常访问this </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 可以做一些状态的清除或者实例的销毁</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">destroyInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="3"><li><strong>beforeRouteEnter</strong>：有在 <code>vue-router</code> 的项目中，每次进入路由都会执行 <code>beforeRouteEnter</code> 钩子。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">beforeRouteEnter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(to, from ,next) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">vm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 无法访问this，但可以通过 next 回调拿到组件实例 vm </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,7)])])}const E=i(n,[["render",l]]);export{r as __pageData,E as default};
