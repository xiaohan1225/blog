import{_ as a,c as t,o as l,ae as p}from"./chunks/framework.BAYqcHKv.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"collect/net/question/002.md","filePath":"collect/net/question/002.md"}'),i={name:"collect/net/question/002.md"};function r(o,e,n,h,c,s){return l(),t("div",null,e[0]||(e[0]=[p('<h2 id="简述三次握手和四次挥手" tabindex="-1">简述三次握手和四次挥手 <a class="header-anchor" href="#简述三次握手和四次挥手" aria-label="Permalink to &quot;简述三次握手和四次挥手&quot;">​</a></h2><h3 id="三次握手" tabindex="-1">三次握手 <a class="header-anchor" href="#三次握手" aria-label="Permalink to &quot;三次握手&quot;">​</a></h3><ol><li><p>首先 Client 端发送连接请求报文，</p></li><li><p>Server 段接受连接后回复 ACK 报文，并为这次连接分配资源。</p></li><li><p>Client 端接收到 ACK 报文后也向 Server 段发生 ACK 报文，并分配资源，这样 TCP 连接就建立了。</p></li></ol><h3 id="四次挥手" tabindex="-1">四次挥手 <a class="header-anchor" href="#四次挥手" aria-label="Permalink to &quot;四次挥手&quot;">​</a></h3><ol><li><p>服务端申请断开连接即FIN，发送Seq+Ack</p></li><li><p>客户端接收信息返回，表示我已经接收到</p></li><li><p>客户端发送信息表示可以断开连接</p></li><li><p>服务端接受信息，返回数据表示已接受信息</p></li></ol><p>之间11种状态转移和状态的含义</p><p>为什么要Time_Wait</p><p>谁先关闭谁先进入time_wait状态</p><p>可靠的终止TCP连接。 保证让迟来的TCP报文有足够的时间被识别并丢弃 让网络上的数据包自动消亡，防止旧连接初始了新的连接 这个期间这个连接的四元组不能被使用，可以设置端口重用（慎用）</p><p>要是没有三次握手会怎么样</p><p>三次握手的首要原因是为了防止旧的重复连接初始化造成混乱。（防止历史连接初始化了连接） 同步双方初始序列号 避免资源浪费 要是没有四次挥手会怎么样</p><p>防止旧连接的数据包 保证连接正确关闭 握手报文里都有哪些关键字段</p><p>ISN代表什么？意义何在？</p><p>ISN，发送方的字节数据编号的原点，让对方生成一个合法的接收窗口。</p><p>ISN是固定不变的吗？</p><p>动态随机。</p><h2 id="算法" tabindex="-1">算法 <a class="header-anchor" href="#算法" aria-label="Permalink to &quot;算法&quot;">​</a></h2><p>栈实现队列</p><p>队列实现栈</p><p>最长不重复子串</p><ul><li>暴力</li><li>滑动窗口（双指针）</li></ul><p>黏包: <a href="https://zhuanlan.zhihu.com/p/158423881" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/158423881</a></p>',22)]))}const u=a(i,[["render",r]]);export{d as __pageData,u as default};
