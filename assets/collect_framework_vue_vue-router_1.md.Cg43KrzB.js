import{_ as a,c as r,o,ae as t}from"./chunks/framework.z0sZ1NT9.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"collect/framework/vue/vue-router/1.md","filePath":"collect/framework/vue/vue-router/1.md"}'),c={name:"collect/framework/vue/vue-router/1.md"};function h(l,e,d,n,s,f){return o(),r("div",null,e[0]||(e[0]=[t('<h2 id="问题1-为啥同步组件没问题-异步组件有问题" tabindex="-1">问题1: 为啥同步组件没问题，异步组件有问题？ <a class="header-anchor" href="#问题1-为啥同步组件没问题-异步组件有问题" aria-label="Permalink to &quot;问题1: 为啥同步组件没问题，异步组件有问题？&quot;">​</a></h2><p>异步组件需要时间解析，解析完执行回调时，访问的状态已经改变了</p><h2 id="问题2-为啥同步的-beforeeach-没问题-异步的-beforeeach-就有问题" tabindex="-1">问题2: 为啥同步的 beforeEach 没问题，异步的 beforeEach 就有问题？ <a class="header-anchor" href="#问题2-为啥同步的-beforeeach-没问题-异步的-beforeeach-就有问题" aria-label="Permalink to &quot;问题2: 为啥同步的 beforeEach 没问题，异步的 beforeEach 就有问题？&quot;">​</a></h2><p><code>vue ssr</code>时执行了两次<code>beforeEach</code>，而异步的<code>beforeEach</code>会导致状态改变，从而导致执行报错。</p><h2 id="问题3-为啥第二次渲染又好了" tabindex="-1">问题3: 为啥第二次渲染又好了？ <a class="header-anchor" href="#问题3-为啥第二次渲染又好了" aria-label="Permalink to &quot;问题3: 为啥第二次渲染又好了？&quot;">​</a></h2><p>偶现</p>',6)]))}const u=a(c,[["render",h]]);export{_ as __pageData,u as default};
