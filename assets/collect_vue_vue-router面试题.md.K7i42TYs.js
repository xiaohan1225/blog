import{_ as r,c as t,o,ae as l}from"./chunks/framework.BAYqcHKv.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"collect/vue/vue-router面试题.md","filePath":"collect/vue/vue-router面试题.md"}'),a={name:"collect/vue/vue-router面试题.md"};function i(u,e,n,s,c,_){return o(),t("div",null,e[0]||(e[0]=[l('<h2 id="vue-router有几种钩子函数-具体是什么及执行流程是怎样的" tabindex="-1">vue-router有几种钩子函数?具体是什么及执行流程是怎样的? <a class="header-anchor" href="#vue-router有几种钩子函数-具体是什么及执行流程是怎样的" aria-label="Permalink to &quot;vue-router有几种钩子函数?具体是什么及执行流程是怎样的?&quot;">​</a></h2><p>钩子函数种类有:全局守卫、路由守卫、组件守卫</p><ol><li>导航被触发。</li><li>在失活的组件里调用 beforeRouteLeave 守卫。</li><li>调用全局的 beforeEach 守卫。</li><li>在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。</li><li>在路由配置里调用 beforeEnter。</li><li>解析异步路由组件。</li><li>在被激活的组件里调用 beforeRouteEnter。</li><li>调用全局的 beforeResolve 守卫 (2.5+)。</li><li>导航被确认。</li><li>调用全局的 afterEach 钩子。</li><li>触发 DOM 更新。</li><li>调用 beforeRouteEnter 守卫中传给 next 的回调函数，创建好的组件实例会作为回调函数的参数传入。</li></ol><h2 id="vue-router两种模式的区别" tabindex="-1">vue-router两种模式的区别？ <a class="header-anchor" href="#vue-router两种模式的区别" aria-label="Permalink to &quot;vue-router两种模式的区别？&quot;">​</a></h2><ul><li>hash模式：hash + hashChange 兼容性好但是不美观</li><li>history模式: historyApi+ popState 虽然美观，但是刷新会出现404需要后端进行配置</li></ul>',5)]))}const d=r(a,[["render",i]]);export{v as __pageData,d as default};
